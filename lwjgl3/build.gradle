buildscript {
    repositories {
        maven {
            url "https://plugins.gradle.org/m2/"
        }
    }
    dependencies {
        classpath "org.beryx:badass-runtime-plugin:1.12.5"
    }
}

apply plugin: 'application'
apply plugin: 'org.beryx.runtime'

sourceSets.main.resources.srcDirs += [rootProject.file('assets').path]
mainClassName = 'dev.lyze.hamballracers.lwjgl3.Lwjgl3Launcher'
sourceCompatibility = 8.0

dependencies {
    implementation project(':core')
    implementation "com.badlogicgames.gdx:gdx-backend-lwjgl3:$gdxVersion"
    implementation "com.badlogicgames.gdx:gdx-platform:$gdxVersion:natives-desktop"
    implementation "com.badlogicgames.gdx-controllers:gdx-controllers-desktop:$gdxControllersVersion"

    implementation "org.projectlombok:lombok:$lombok"
    annotationProcessor "org.projectlombok:lombok:$lombok"
}

import org.gradle.internal.os.OperatingSystem

run {
    workingDir = rootProject.file('assets').path
    setIgnoreExitValue(true)

    if (OperatingSystem.current() == OperatingSystem.MAC_OS) {
        // Required to run LWJGL3 Java apps on MacOS
        jvmArgs += "-XstartOnFirstThread"
    }
}

jar {
    destinationDirectory = file("$buildDir/lib")
// sets the name of the .jar file this produces to the name of the game or app.
    archiveBaseName.set(appName)
// the duplicatesStrategy matters starting in Gradle 7.0; this setting works.
    duplicatesStrategy(DuplicatesStrategy.EXCLUDE)
    dependsOn configurations.runtimeClasspath
    from { configurations.runtimeClasspath.collect { it.isDirectory() ? it : zipTree(it) } }
// these "exclude" lines remove some unnecessary duplicate files in the output JAR.
    exclude('META-INF/INDEX.LIST', 'META-INF/*.SF', 'META-INF/*.DSA', 'META-INF/*.RSA')
    dependencies {
        exclude('META-INF/INDEX.LIST', 'META-INF/maven/**')
    }
// setting the manifest makes the JAR runnable.
    manifest {
        attributes 'Main-Class': project.mainClassName
    }
// this last step may help on some OSes that need extra instruction to make runnable JARs.
    doLast {
        file(archiveFile).setExecutable(true, false)
    }
}

jpackageImage.dependsOn jar

runtime {
    options = ['--strip-debug',
               '--compress', '2',
               '--no-header-files',
               '--no-man-pages',
               '--strip-native-commands',
               '--vm', 'server']
    modules = ['java.base' ,
               'java.desktop',
               'jdk.unsupported']

    jpackage {
        installerOptions += [ '--vendor', 'lyze.dev', '--description', 'Libgdx gamejam project june 2021' ]
        mainJar = jar.archiveFileName.get()
        installerName = imageName = appName

        if (OperatingSystem.current().windows) {
            //imageOptions += [ '--win-console'] //, "--icon", file("../assets/icons/Icon.ico") ]
            installerOptions += ['--win-per-user-install', '--win-dir-chooser', '--win-menu', '--win-shortcut', '--win-upgrade-uuid', '5dc2ace2-2212-4961-987b-f59706d6d86e']
        } else {
            //imageOptions += ["--icon", file("../assets/icons/Icon-32.png")]
            installerOptions += ['--linux-menu-group', '--linux-shortcut']
        }
    }
}
